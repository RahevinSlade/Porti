@model HW6.Models.ProductReview

@{ 
    ViewBag.Title = "User Review";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1> Product Review! </h1>

@*This is the Review page, which will be dont in Form format, allowing the user to enter their name, email, rating, and any comment they wish to write up.
Leaving an email address allows Contact Support to get ahold of the user when needed.*@

@using (Html.BeginForm())

{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="create-review-form">
        <h4>Please comment and rate our product, if you have any issues we will have one of contact reps get ahold of you as soon as possible.</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="row">

               
                <div class="col-md-3"><!--ProductID-->
                    @Html.LabelFor(model => model.ProductID, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ProductID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProductID, "", new { @class = "text-danger" })
                    <p>@ViewBag.product</p>
                
                </div>

                
                <div class="col-md-4"><!--Name-->
                    @Html.LabelFor(model => model.ReviewerName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ReviewerName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReviewerName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                
                <div class="col-md-3"><!--Email Contact-->
                    @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                </div>
                
                <div class="col-md-4"><!--Review Rating, maxes at 5, if greater it goes back to 5-->
                    @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                
                <div class="col-md-12"><!--Notes-->
                    @Html.LabelFor(model => model.Comments, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Comments, new { htmlAttributes = new { @class = "form-control", @id = "write-review-comment-box" } })
                    @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-md-4">
                    <input type="submit" value="Submit Review" class="btn btn-default" onclick="Thanks()" />
                </div>
            </div>
        </div>
    </div>
}

<script>
    function Thanks() {
        alert("Thank you!")
    }
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}